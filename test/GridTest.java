import org.junit.Test;

import cs3500.model.PhotoshopImpl;

import static org.junit.Assert.assertEquals;

/**
 * Uses the grid.ppm to test whether edit functions work.
 */
public class GridTest {

  @Test
  public void testLoadGrid() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images/grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    assertEquals(126, photo.getPixelColorAt("Grid", 0, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 0, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 0, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 0, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 0, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 0, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 0, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 0, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 0, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 0, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 0, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 0, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 0, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 0, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 0, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 1, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 1, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 1, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 1, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 1, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 1, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 1, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 1, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 1, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 1, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 1, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 1, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 1, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 1, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 1, 4).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 2, 0).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 2, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 2, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 2, 1).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 2, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 2, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 2, 2).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 2, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 2, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 2, 3).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 2, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 2, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 2, 4).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 2, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 2, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 3, 0).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 3, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 3, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 3, 1).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 3, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 3, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 3, 2).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 3, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 3, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 3, 3).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 3, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 3, 3).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 3, 4).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 3, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 3, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 4, 0).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 4, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 4, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 4, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 4, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 4, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 4, 2).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 4, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 4, 2).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 4, 3).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 4, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 4, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 4, 4).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 4, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 4, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 5, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 5, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 5, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 5, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 5, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 5, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 5, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 5, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 5, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 5, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 5, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 5, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 5, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 5, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 5, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 6, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("Grid", 6, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 6, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("Grid", 6, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("Grid", 6, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("Grid", 6, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 6, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("Grid", 6, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 6, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("Grid", 6, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("Grid", 6, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("Grid", 6, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("Grid", 6, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 6, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("Grid", 6, 4).getBlueValue());
  }

  @Test
  public void testVerticalFlip() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.verticalFlip("Grid", "VFlip");
    assertEquals(126, photo.getPixelColorAt("VFlip", 0, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 0, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 0, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 0, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 0, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 0, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 0, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 0, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 0, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 0, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 0, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 0, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 0, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 0, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 0, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 1, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 1, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 1, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 1, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 1, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 1, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 1, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 1, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 1, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 1, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 1, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 1, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 1, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 1, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 1, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 2, 0).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 2, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 2, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 2, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 2, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 2, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 2, 2).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 2, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 2, 2).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 2, 3).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 2, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 2, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 2, 4).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 2, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 2, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 3, 0).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 3, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 3, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 3, 1).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 3, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 3, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 3, 2).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 3, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 3, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 3, 3).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 3, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 3, 3).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 3, 4).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 3, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 3, 4).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 4, 0).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 4, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 4, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 4, 1).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 4, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 4, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 4, 2).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 4, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 4, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 4, 3).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 4, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 4, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 4, 4).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 4, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 4, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 5, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 5, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 5, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 5, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 5, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 5, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 5, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 5, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 5, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 5, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 5, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 5, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 5, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 5, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 5, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 6, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 6, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 6, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("VFlip", 6, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("VFlip", 6, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("VFlip", 6, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("VFlip", 6, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("VFlip", 6, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("VFlip", 6, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 6, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("VFlip", 6, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 6, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("VFlip", 6, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("VFlip", 6, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("VFlip", 6, 4).getBlueValue());
  }

  @Test
  public void testHorizontalFlip() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.horizontalFlip("Grid", "HFlip");
    assertEquals(52, photo.getPixelColorAt("HFlip", 0, 0).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 0, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 0, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 0, 1).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 0, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 0, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 0, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 0, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 0, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 0, 3).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 0, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 0, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 0, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 0, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 0, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 1, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 1, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 1, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 1, 1).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 1, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 1, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 1, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 1, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 1, 2).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 1, 3).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 1, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 1, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 1, 4).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 1, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 1, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 2, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 2, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 2, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 2, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 2, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 2, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 2, 2).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 2, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 2, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 2, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 2, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 2, 3).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 2, 4).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 2, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 2, 4).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 3, 0).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 3, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 3, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 3, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 3, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 3, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 3, 2).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 3, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 3, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 3, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 3, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 3, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 3, 4).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 3, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 3, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 4, 0).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 4, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 4, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 4, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 4, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 4, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 4, 2).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 4, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 4, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 4, 3).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 4, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 4, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 4, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 4, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 4, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 5, 0).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 5, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 5, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 5, 1).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 5, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 5, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 5, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 5, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 5, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 5, 3).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 5, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 5, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 5, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 5, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 5, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 6, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 6, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 6, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 6, 1).getRedValue());
    assertEquals(163, photo.getPixelColorAt("HFlip", 6, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 6, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("HFlip", 6, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("HFlip", 6, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("HFlip", 6, 2).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("HFlip", 6, 3).getRedValue());
    assertEquals(199, photo.getPixelColorAt("HFlip", 6, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("HFlip", 6, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("HFlip", 6, 4).getRedValue());
    assertEquals(204, photo.getPixelColorAt("HFlip", 6, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("HFlip", 6, 4).getBlueValue());
  }

  @Test
  public void testBlueComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images/grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.blueComponent("Grid", "G-Blue");
    assertEquals(19, photo.getPixelColorAt("G-Blue", 0, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 0, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 0, 0).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 0, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 0, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 0, 1).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 0, 2).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 0, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 0, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 0, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 0, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 0, 3).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 0, 4).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 0, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 0, 4).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 1, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 1, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 1, 0).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 1, 1).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 1, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 1, 1).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 1, 2).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 1, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 1, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 1, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 1, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 1, 3).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 1, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 1, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 1, 4).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 2, 0).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 2, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 2, 0).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 2, 1).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 2, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 2, 1).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 2, 2).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 2, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 2, 2).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 2, 3).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 2, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 2, 3).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 2, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 2, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 2, 4).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 3, 0).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 3, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 3, 0).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 3, 1).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 3, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 3, 1).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 3, 2).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 3, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 3, 2).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 3, 3).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 3, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 3, 3).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 3, 4).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 3, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 3, 4).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 4, 0).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 4, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 4, 0).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 4, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 4, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 4, 1).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 4, 2).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 4, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 4, 2).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 4, 3).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 4, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 4, 3).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 4, 4).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 4, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 4, 4).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 5, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 5, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 5, 0).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 5, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 5, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 5, 1).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 5, 2).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 5, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 5, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 5, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 5, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 5, 3).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 5, 4).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 5, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 5, 4).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 6, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 6, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 6, 0).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 6, 1).getRedValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 6, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Blue", 6, 1).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 6, 2).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 6, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 6, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 6, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 6, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Blue", 6, 3).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 6, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 6, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Blue", 6, 4).getBlueValue());
  }

  @Test
  public void testRedComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.redComponent("Grid", "G-Red");
    assertEquals(126, photo.getPixelColorAt("G-Red", 0, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 0, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 0, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 0, 1).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 0, 1).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 0, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 0, 2).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 0, 2).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 0, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 0, 3).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 0, 3).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 0, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 0, 4).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 0, 4).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 0, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 1, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 1, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 1, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 1, 1).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 1, 1).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 1, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 1, 2).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 1, 2).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 1, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 1, 3).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 1, 3).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 1, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 1, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 1, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 1, 4).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 2, 0).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 2, 0).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 2, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 2, 1).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 2, 1).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 2, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 2, 2).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 2, 2).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 2, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 2, 3).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 2, 3).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 2, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 2, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 2, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 2, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 3, 0).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 3, 0).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 3, 0).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 3, 1).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 3, 1).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 3, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 3, 2).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 3, 2).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 3, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 3, 3).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 3, 3).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 3, 3).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 3, 4).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 3, 4).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 3, 4).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 4, 0).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 4, 0).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 4, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 4, 1).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 4, 1).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 4, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 4, 2).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 4, 2).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 4, 2).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 4, 3).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 4, 3).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 4, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 4, 4).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 4, 4).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 4, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 5, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 5, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 5, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 5, 1).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 5, 1).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 5, 1).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 5, 2).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 5, 2).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 5, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 5, 3).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 5, 3).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 5, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 5, 4).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 5, 4).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 5, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 6, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 6, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 6, 0).getBlueValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 6, 1).getRedValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 6, 1).getGreenValue());
    assertEquals(158, photo.getPixelColorAt("G-Red", 6, 1).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 6, 2).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 6, 2).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 6, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 6, 3).getRedValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 6, 3).getGreenValue());
    assertEquals(52, photo.getPixelColorAt("G-Red", 6, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 6, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 6, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Red", 6, 4).getBlueValue());

  }

  @Test
  public void testGreenComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.greenComponent("Grid", "G-Green");
    assertEquals(19, photo.getPixelColorAt("G-Green", 0, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 0, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 0, 0).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 0, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 0, 1).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 0, 1).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 0, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 0, 2).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 0, 2).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 0, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 0, 3).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 0, 3).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 0, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 0, 4).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 0, 4).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 1, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 1, 0).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 1, 0).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 1, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 1, 1).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 1, 1).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 1, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 1, 2).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 1, 2).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 1, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 1, 3).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 1, 3).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 1, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 1, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 1, 4).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 2, 0).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 2, 0).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 2, 0).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 2, 1).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 2, 1).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 2, 1).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 2, 2).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 2, 2).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 2, 2).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 2, 3).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 2, 3).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 2, 3).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 2, 4).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 2, 4).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 2, 4).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 3, 0).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 3, 0).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 3, 0).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 3, 1).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 3, 1).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 3, 1).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 3, 2).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 3, 2).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 3, 2).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 3, 3).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 3, 3).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 3, 3).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 3, 4).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 3, 4).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 3, 4).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 4, 0).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 4, 0).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 4, 0).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 4, 1).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 4, 1).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 4, 1).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 4, 2).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 4, 2).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 4, 2).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 4, 3).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 4, 3).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 4, 3).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 4, 4).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 4, 4).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 4, 4).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 5, 0).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 5, 0).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 5, 0).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 5, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 5, 1).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 5, 1).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 5, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 5, 2).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 5, 2).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 5, 3).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 5, 3).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 5, 3).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 5, 4).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 5, 4).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 5, 4).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 6, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 6, 0).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Green", 6, 0).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 6, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 6, 1).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Green", 6, 1).getBlueValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 6, 2).getRedValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 6, 2).getGreenValue());
    assertEquals(57, photo.getPixelColorAt("G-Green", 6, 2).getBlueValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 6, 3).getRedValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 6, 3).getGreenValue());
    assertEquals(163, photo.getPixelColorAt("G-Green", 6, 3).getBlueValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 6, 4).getRedValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 6, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("G-Green", 6, 4).getBlueValue());
  }

  @Test
  public void testLumaComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.luma("Grid", "G-Luma");
    assertEquals(41, photo.getPixelColorAt("G-Luma", 0, 0).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 0, 0).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 0, 0).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 0, 1).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 0, 1).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 0, 1).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 0, 2).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 0, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 0, 2).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 0, 3).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 0, 3).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 0, 3).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 0, 4).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 0, 4).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 0, 4).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 1, 0).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 1, 0).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 1, 0).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 1, 1).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 1, 1).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 1, 1).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 1, 2).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 1, 2).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 1, 2).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 1, 3).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 1, 3).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 1, 3).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 1, 4).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 1, 4).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 1, 4).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 2, 0).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 2, 0).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 2, 0).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 2, 1).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 2, 1).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 2, 1).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 2, 2).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 2, 2).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 2, 2).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 2, 3).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 2, 3).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 2, 3).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 2, 4).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 2, 4).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 2, 4).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 3, 0).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 3, 0).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 3, 0).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 3, 1).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 3, 1).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 3, 1).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 3, 2).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 3, 2).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 3, 2).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 3, 3).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 3, 3).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 3, 3).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 3, 4).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 3, 4).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 3, 4).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 4, 0).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 4, 0).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 4, 0).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 4, 1).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 4, 1).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 4, 1).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 4, 2).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 4, 2).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 4, 2).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 4, 3).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 4, 3).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 4, 3).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 4, 4).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 4, 4).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 4, 4).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 5, 0).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 5, 0).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 5, 0).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 5, 1).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 5, 1).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 5, 1).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 5, 2).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 5, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 5, 2).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 5, 3).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 5, 3).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 5, 3).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 5, 4).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 5, 4).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 5, 4).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 6, 0).getRedValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 6, 0).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("G-Luma", 6, 0).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 6, 1).getRedValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 6, 1).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Luma", 6, 1).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 6, 2).getRedValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 6, 2).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("G-Luma", 6, 2).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 6, 3).getRedValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 6, 3).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("G-Luma", 6, 3).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 6, 4).getRedValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 6, 4).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("G-Luma", 6, 4).getBlueValue());
  }

  @Test
  public void testValueComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.value("Grid", "G-Value");
    assertEquals(126, photo.getPixelColorAt("G-Value", 0, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 0, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 0, 0).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 0, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 0, 1).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 0, 1).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 0, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 0, 2).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 0, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 0, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 0, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 0, 3).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 0, 4).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 0, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 0, 4).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 1, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 1, 0).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 1, 0).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 1, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 1, 1).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 1, 1).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 1, 2).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 1, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 1, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 1, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 1, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 1, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 1, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 1, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 1, 4).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 2, 0).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 2, 0).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 2, 0).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 2, 1).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 2, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 2, 1).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 2, 2).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 2, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 2, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 2, 3).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 2, 3).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 2, 3).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 2, 4).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 2, 4).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 2, 4).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 3, 0).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 3, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 3, 0).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 3, 1).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 3, 1).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 3, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 3, 2).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 3, 2).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 3, 2).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 3, 3).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 3, 3).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 3, 3).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 3, 4).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 3, 4).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 3, 4).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 4, 0).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 4, 0).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 4, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 4, 1).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 4, 1).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 4, 1).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 4, 2).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 4, 2).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 4, 2).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 4, 3).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 4, 3).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 4, 3).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 4, 4).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 4, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 4, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 5, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 5, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 5, 0).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 5, 1).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 5, 1).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 5, 1).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 5, 2).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 5, 2).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 5, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 5, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 5, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 5, 3).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 5, 4).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 5, 4).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 5, 4).getBlueValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 6, 0).getRedValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 6, 0).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("G-Value", 6, 0).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 6, 1).getRedValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 6, 1).getGreenValue());
    assertEquals(199, photo.getPixelColorAt("G-Value", 6, 1).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 6, 2).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 6, 2).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 6, 2).getBlueValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 6, 3).getRedValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 6, 3).getGreenValue());
    assertEquals(165, photo.getPixelColorAt("G-Value", 6, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 6, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 6, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Value", 6, 4).getBlueValue());
  }

  @Test
  public void testIntensityComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.intensity("Grid", "G-Int");
    assertEquals(54, photo.getPixelColorAt("G-Int", 0, 0).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 0, 0).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 0, 0).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 0, 1).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 0, 1).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 0, 1).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 0, 2).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 0, 2).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 0, 2).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 0, 3).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 0, 3).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 0, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 0, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 0, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 0, 4).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 1, 0).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 1, 0).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 1, 0).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 1, 1).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 1, 1).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 1, 1).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 1, 2).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 1, 2).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 1, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 1, 3).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 1, 3).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 1, 3).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 1, 4).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 1, 4).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 1, 4).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 2, 0).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 2, 0).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 2, 0).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 2, 1).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 2, 1).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 2, 1).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 2, 2).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 2, 2).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 2, 2).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 2, 3).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 2, 3).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 2, 3).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 2, 4).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 2, 4).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 2, 4).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 3, 0).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 3, 0).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 3, 0).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 3, 1).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 3, 1).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 3, 1).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 3, 2).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 3, 2).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 3, 2).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 3, 3).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 3, 3).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 3, 3).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 3, 4).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 3, 4).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 3, 4).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 4, 0).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 4, 0).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 4, 0).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 4, 1).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 4, 1).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 4, 1).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 4, 2).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 4, 2).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 4, 2).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 4, 3).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 4, 3).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 4, 3).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 4, 4).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 4, 4).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 4, 4).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 5, 0).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 5, 0).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 5, 0).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 5, 1).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 5, 1).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 5, 1).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 5, 2).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 5, 2).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 5, 2).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 5, 3).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 5, 3).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 5, 3).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 5, 4).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 5, 4).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 5, 4).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 6, 0).getRedValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 6, 0).getGreenValue());
    assertEquals(116, photo.getPixelColorAt("G-Int", 6, 0).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 6, 1).getRedValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 6, 1).getGreenValue());
    assertEquals(119, photo.getPixelColorAt("G-Int", 6, 1).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 6, 2).getRedValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 6, 2).getGreenValue());
    assertEquals(91, photo.getPixelColorAt("G-Int", 6, 2).getBlueValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 6, 3).getRedValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 6, 3).getGreenValue());
    assertEquals(126, photo.getPixelColorAt("G-Int", 6, 3).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 6, 4).getRedValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 6, 4).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("G-Int", 6, 4).getBlueValue());

  }

  @Test
  public void testBrightenComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.brighten(10, "Grid", "G-Bright");
    assertEquals(136, photo.getPixelColorAt("G-Bright", 0, 0).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 0, 0).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 0, 0).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 0, 1).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 0, 1).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 0, 1).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 0, 2).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 0, 2).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 0, 2).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 0, 3).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 0, 3).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 0, 3).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 0, 4).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 0, 4).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 0, 4).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 1, 0).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 1, 0).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 1, 0).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 1, 1).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 1, 1).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 1, 1).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 1, 2).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 1, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 1, 2).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 1, 3).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 1, 3).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 1, 3).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 1, 4).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 1, 4).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 1, 4).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 2, 0).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 2, 0).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 2, 0).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 2, 1).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 2, 1).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 2, 1).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 2, 2).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 2, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 2, 2).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 2, 3).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 2, 3).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 2, 3).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 2, 4).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 2, 4).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 2, 4).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 3, 0).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 3, 0).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 3, 0).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 3, 1).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 3, 1).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 3, 1).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 3, 2).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 3, 2).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 3, 2).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 3, 3).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 3, 3).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 3, 3).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 3, 4).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 3, 4).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 3, 4).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 4, 0).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 4, 0).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 4, 0).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 4, 1).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 4, 1).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 4, 1).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 4, 2).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 4, 2).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 4, 2).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 4, 3).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 4, 3).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 4, 3).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 4, 4).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 4, 4).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 4, 4).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 5, 0).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 5, 0).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 5, 0).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 5, 1).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 5, 1).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 5, 1).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 5, 2).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 5, 2).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 5, 2).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 5, 3).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 5, 3).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 5, 3).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 5, 4).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 5, 4).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 5, 4).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 6, 0).getRedValue());
    assertEquals(214, photo.getPixelColorAt("G-Bright", 6, 0).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 6, 0).getBlueValue());
    assertEquals(168, photo.getPixelColorAt("G-Bright", 6, 1).getRedValue());
    assertEquals(209, photo.getPixelColorAt("G-Bright", 6, 1).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("G-Bright", 6, 1).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 6, 2).getRedValue());
    assertEquals(67, photo.getPixelColorAt("G-Bright", 6, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 6, 2).getBlueValue());
    assertEquals(62, photo.getPixelColorAt("G-Bright", 6, 3).getRedValue());
    assertEquals(173, photo.getPixelColorAt("G-Bright", 6, 3).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("G-Bright", 6, 3).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("G-Bright", 6, 4).getRedValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 6, 4).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("G-Bright", 6, 4).getBlueValue());
  }

  @Test
  public void testDarkenComponent() {
    PhotoshopImpl photo = new PhotoshopImpl();
    photo.load("images\\grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.brighten(-10, "Grid", "G-Dark");
    assertEquals(116, photo.getPixelColorAt("G-Dark", 0, 0).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 0, 0).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 0, 0).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 0, 1).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 0, 1).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 0, 1).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 0, 2).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 0, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 0, 2).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 0, 3).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 0, 3).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 0, 3).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 0, 4).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 0, 4).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 0, 4).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 1, 0).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 1, 0).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 1, 0).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 1, 1).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 1, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 1, 1).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 1, 2).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 1, 2).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 1, 2).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 1, 3).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 1, 3).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 1, 3).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 1, 4).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 1, 4).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 1, 4).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 2, 0).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 2, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 2, 0).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 2, 1).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 2, 1).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 2, 1).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 2, 2).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 2, 2).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 2, 2).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 2, 3).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 2, 3).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 2, 3).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 2, 4).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 2, 4).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 2, 4).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 3, 0).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 3, 0).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 3, 0).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 3, 1).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 3, 1).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 3, 1).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 3, 2).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 3, 2).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 3, 2).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 3, 3).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 3, 3).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 3, 3).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 3, 4).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 3, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 3, 4).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 4, 0).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 4, 0).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 4, 0).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 4, 1).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 4, 1).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 4, 1).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 4, 2).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 4, 2).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 4, 2).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 4, 3).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 4, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 4, 3).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 4, 4).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 4, 4).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 4, 4).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 5, 0).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 5, 0).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 5, 0).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 5, 1).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 5, 1).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 5, 1).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 5, 2).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 5, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 5, 2).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 5, 3).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 5, 3).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 5, 3).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 5, 4).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 5, 4).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 5, 4).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 6, 0).getRedValue());
    assertEquals(194, photo.getPixelColorAt("G-Dark", 6, 0).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 6, 0).getBlueValue());
    assertEquals(148, photo.getPixelColorAt("G-Dark", 6, 1).getRedValue());
    assertEquals(189, photo.getPixelColorAt("G-Dark", 6, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("G-Dark", 6, 1).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 6, 2).getRedValue());
    assertEquals(47, photo.getPixelColorAt("G-Dark", 6, 2).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 6, 2).getBlueValue());
    assertEquals(42, photo.getPixelColorAt("G-Dark", 6, 3).getRedValue());
    assertEquals(153, photo.getPixelColorAt("G-Dark", 6, 3).getGreenValue());
    assertEquals(155, photo.getPixelColorAt("G-Dark", 6, 3).getBlueValue());
    assertEquals(116, photo.getPixelColorAt("G-Dark", 6, 4).getRedValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 6, 4).getGreenValue());
    assertEquals(9, photo.getPixelColorAt("G-Dark", 6, 4).getBlueValue());
  }
}
