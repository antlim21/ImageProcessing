import org.junit.Test;

import cs3500.model.PhotoshopAdditionalOperationsImpl;
import cs3500.model.PhotoshopAdditionalOperationsInterface;

import static org.junit.Assert.assertEquals;

/**
 * GridAdditionalTest tests the individual values after applying the new functionality
 * (sepia, blur, sharpen, greyscale) onto a grid image.
 */
public class GridAdditionalTest {

  @Test
  public void testBlur() {
    PhotoshopAdditionalOperationsInterface photo = new PhotoshopAdditionalOperationsImpl();
    photo.load("res/grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.blur("Grid", "grid-main");
    assertEquals(9, photo.getPixelColorAt("grid-main", 0, 0).getRedValue());
    assertEquals(12, photo.getPixelColorAt("grid-main", 0, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-main", 0, 0).getBlueValue());
    assertEquals(22, photo.getPixelColorAt("grid-main", 0, 1).getRedValue());
    assertEquals(27, photo.getPixelColorAt("grid-main", 0, 1).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("grid-main", 0, 1).getBlueValue());
    assertEquals(18, photo.getPixelColorAt("grid-main", 0, 2).getRedValue());
    assertEquals(29, photo.getPixelColorAt("grid-main", 0, 2).getGreenValue());
    assertEquals(30, photo.getPixelColorAt("grid-main", 0, 2).getBlueValue());
    assertEquals(16, photo.getPixelColorAt("grid-main", 0, 3).getRedValue());
    assertEquals(24, photo.getPixelColorAt("grid-main", 0, 3).getGreenValue());
    assertEquals(31, photo.getPixelColorAt("grid-main", 0, 3).getBlueValue());
    assertEquals(18, photo.getPixelColorAt("grid-main", 0, 4).getRedValue());
    assertEquals(12, photo.getPixelColorAt("grid-main", 0, 4).getGreenValue());
    assertEquals(12, photo.getPixelColorAt("grid-main", 0, 4).getBlueValue());
    assertEquals(22, photo.getPixelColorAt("grid-main", 1, 0).getRedValue());
    assertEquals(27, photo.getPixelColorAt("grid-main", 1, 0).getGreenValue());
    assertEquals(10, photo.getPixelColorAt("grid-main", 1, 0).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("grid-main", 1, 1).getRedValue());
    assertEquals(73, photo.getPixelColorAt("grid-main", 1, 1).getGreenValue());
    assertEquals(50, photo.getPixelColorAt("grid-main", 1, 1).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("grid-main", 1, 2).getRedValue());
    assertEquals(82, photo.getPixelColorAt("grid-main", 1, 2).getGreenValue());
    assertEquals(92, photo.getPixelColorAt("grid-main", 1, 2).getBlueValue());
    assertEquals(59, photo.getPixelColorAt("grid-main", 1, 3).getRedValue());
    assertEquals(73, photo.getPixelColorAt("grid-main", 1, 3).getGreenValue());
    assertEquals(76, photo.getPixelColorAt("grid-main", 1, 3).getBlueValue());
    assertEquals(59, photo.getPixelColorAt("grid-main", 1, 4).getRedValue());
    assertEquals(50, photo.getPixelColorAt("grid-main", 1, 4).getGreenValue());
    assertEquals(27, photo.getPixelColorAt("grid-main", 1, 4).getBlueValue());
    assertEquals(18, photo.getPixelColorAt("grid-main", 2, 0).getRedValue());
    assertEquals(29, photo.getPixelColorAt("grid-main", 2, 0).getGreenValue());
    assertEquals(30, photo.getPixelColorAt("grid-main", 2, 0).getBlueValue());
    assertEquals(54, photo.getPixelColorAt("grid-main", 2, 1).getRedValue());
    assertEquals(82, photo.getPixelColorAt("grid-main", 2, 1).getGreenValue());
    assertEquals(92, photo.getPixelColorAt("grid-main", 2, 1).getBlueValue());
    assertEquals(77, photo.getPixelColorAt("grid-main", 2, 2).getRedValue());
    assertEquals(102, photo.getPixelColorAt("grid-main", 2, 2).getGreenValue());
    assertEquals(106, photo.getPixelColorAt("grid-main", 2, 2).getBlueValue());
    assertEquals(99, photo.getPixelColorAt("grid-main", 2, 3).getRedValue());
    assertEquals(111, photo.getPixelColorAt("grid-main", 2, 3).getGreenValue());
    assertEquals(60, photo.getPixelColorAt("grid-main", 2, 3).getBlueValue());
    assertEquals(90, photo.getPixelColorAt("grid-main", 2, 4).getRedValue());
    assertEquals(101, photo.getPixelColorAt("grid-main", 2, 4).getGreenValue());
    assertEquals(19, photo.getPixelColorAt("grid-main", 2, 4).getBlueValue());
    assertEquals(16, photo.getPixelColorAt("grid-main", 3, 0).getRedValue());
    assertEquals(24, photo.getPixelColorAt("grid-main", 3, 0).getGreenValue());
    assertEquals(31, photo.getPixelColorAt("grid-main", 3, 0).getBlueValue());
    assertEquals(59, photo.getPixelColorAt("grid-main", 3, 1).getRedValue());
    assertEquals(73, photo.getPixelColorAt("grid-main", 3, 1).getGreenValue());
    assertEquals(76, photo.getPixelColorAt("grid-main", 3, 1).getBlueValue());
    assertEquals(99, photo.getPixelColorAt("grid-main", 3, 2).getRedValue());
    assertEquals(111, photo.getPixelColorAt("grid-main", 3, 2).getGreenValue());
    assertEquals(60, photo.getPixelColorAt("grid-main", 3, 2).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("grid-main", 3, 3).getRedValue());
    assertEquals(140, photo.getPixelColorAt("grid-main", 3, 3).getGreenValue());
    assertEquals(30, photo.getPixelColorAt("grid-main", 3, 3).getBlueValue());
    assertEquals(91, photo.getPixelColorAt("grid-main", 3, 4).getRedValue());
    assertEquals(119, photo.getPixelColorAt("grid-main", 3, 4).getGreenValue());
    assertEquals(25, photo.getPixelColorAt("grid-main", 3, 4).getBlueValue());
    assertEquals(25, photo.getPixelColorAt("grid-main", 4, 0).getRedValue());
    assertEquals(24, photo.getPixelColorAt("grid-main", 4, 0).getGreenValue());
    assertEquals(13, photo.getPixelColorAt("grid-main", 4, 0).getBlueValue());
    assertEquals(83, photo.getPixelColorAt("grid-main", 4, 1).getRedValue());
    assertEquals(87, photo.getPixelColorAt("grid-main", 4, 1).getGreenValue());
    assertEquals(29, photo.getPixelColorAt("grid-main", 4, 1).getBlueValue());
    assertEquals(119, photo.getPixelColorAt("grid-main", 4, 2).getRedValue());
    assertEquals(140, photo.getPixelColorAt("grid-main", 4, 2).getGreenValue());
    assertEquals(30, photo.getPixelColorAt("grid-main", 4, 2).getBlueValue());
    assertEquals(109, photo.getPixelColorAt("grid-main", 4, 3).getRedValue());
    assertEquals(148, photo.getPixelColorAt("grid-main", 4, 3).getGreenValue());
    assertEquals(55, photo.getPixelColorAt("grid-main", 4, 3).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-main", 4, 4).getRedValue());
    assertEquals(97, photo.getPixelColorAt("grid-main", 4, 4).getGreenValue());
    assertEquals(72, photo.getPixelColorAt("grid-main", 4, 4).getBlueValue());
    assertEquals(31, photo.getPixelColorAt("grid-main", 5, 0).getRedValue());
    assertEquals(38, photo.getPixelColorAt("grid-main", 5, 0).getGreenValue());
    assertEquals(3, photo.getPixelColorAt("grid-main", 5, 0).getBlueValue());
    assertEquals(94, photo.getPixelColorAt("grid-main", 5, 1).getRedValue());
    assertEquals(116, photo.getPixelColorAt("grid-main", 5, 1).getGreenValue());
    assertEquals(17, photo.getPixelColorAt("grid-main", 5, 1).getBlueValue());
    assertEquals(109, photo.getPixelColorAt("grid-main", 5, 2).getRedValue());
    assertEquals(148, photo.getPixelColorAt("grid-main", 5, 2).getGreenValue());
    assertEquals(55, photo.getPixelColorAt("grid-main", 5, 2).getBlueValue());
    assertEquals(83, photo.getPixelColorAt("grid-main", 5, 3).getRedValue());
    assertEquals(121, photo.getPixelColorAt("grid-main", 5, 3).getGreenValue());
    assertEquals(103, photo.getPixelColorAt("grid-main", 5, 3).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("grid-main", 5, 4).getRedValue());
    assertEquals(78, photo.getPixelColorAt("grid-main", 5, 4).getGreenValue());
    assertEquals(93, photo.getPixelColorAt("grid-main", 5, 4).getBlueValue());
    assertEquals(26, photo.getPixelColorAt("grid-main", 6, 0).getRedValue());
    assertEquals(36, photo.getPixelColorAt("grid-main", 6, 0).getGreenValue());
    assertEquals(1, photo.getPixelColorAt("grid-main", 6, 0).getBlueValue());
    assertEquals(69, photo.getPixelColorAt("grid-main", 6, 1).getRedValue());
    assertEquals(93, photo.getPixelColorAt("grid-main", 6, 1).getGreenValue());
    assertEquals(22, photo.getPixelColorAt("grid-main", 6, 1).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-main", 6, 2).getRedValue());
    assertEquals(97, photo.getPixelColorAt("grid-main", 6, 2).getGreenValue());
    assertEquals(72, photo.getPixelColorAt("grid-main", 6, 2).getBlueValue());
    assertEquals(52, photo.getPixelColorAt("grid-main", 6, 3).getRedValue());
    assertEquals(78, photo.getPixelColorAt("grid-main", 6, 3).getGreenValue());
    assertEquals(93, photo.getPixelColorAt("grid-main", 6, 3).getBlueValue());
    assertEquals(46, photo.getPixelColorAt("grid-main", 6, 4).getRedValue());
    assertEquals(47, photo.getPixelColorAt("grid-main", 6, 4).getGreenValue());
    assertEquals(54, photo.getPixelColorAt("grid-main", 6, 4).getBlueValue());
  }

  @Test
  public void testSharpen() {
    PhotoshopAdditionalOperationsInterface photo = new PhotoshopAdditionalOperationsImpl();
    photo.load("res/grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.sharpen("Grid", "grid-sharp");
    assertEquals(18, photo.getPixelColorAt("grid-sharp", 0, 0).getRedValue());
    assertEquals(12, photo.getPixelColorAt("grid-sharp", 0, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 0).getBlueValue());
    assertEquals(15, photo.getPixelColorAt("grid-sharp", 0, 1).getRedValue());
    assertEquals(10, photo.getPixelColorAt("grid-sharp", 0, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 1).getBlueValue());
    assertEquals(3, photo.getPixelColorAt("grid-sharp", 0, 2).getRedValue());
    assertEquals(42, photo.getPixelColorAt("grid-sharp", 0, 2).getGreenValue());
    assertEquals(31, photo.getPixelColorAt("grid-sharp", 0, 2).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 3).getRedValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 3).getGreenValue());
    assertEquals(38, photo.getPixelColorAt("grid-sharp", 0, 3).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 4).getRedValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 0, 4).getBlueValue());
    assertEquals(15, photo.getPixelColorAt("grid-sharp", 1, 0).getRedValue());
    assertEquals(10, photo.getPixelColorAt("grid-sharp", 1, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 1, 0).getBlueValue());
    assertEquals(135, photo.getPixelColorAt("grid-sharp", 1, 1).getRedValue());
    assertEquals(193, photo.getPixelColorAt("grid-sharp", 1, 1).getGreenValue());
    assertEquals(72, photo.getPixelColorAt("grid-sharp", 1, 1).getBlueValue());
    assertEquals(70, photo.getPixelColorAt("grid-sharp", 1, 2).getRedValue());
    assertEquals(100, photo.getPixelColorAt("grid-sharp", 1, 2).getGreenValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 1, 2).getBlueValue());
    assertEquals(86, photo.getPixelColorAt("grid-sharp", 1, 3).getRedValue());
    assertEquals(170, photo.getPixelColorAt("grid-sharp", 1, 3).getGreenValue());
    assertEquals(211, photo.getPixelColorAt("grid-sharp", 1, 3).getBlueValue());
    assertEquals(136, photo.getPixelColorAt("grid-sharp", 1, 4).getRedValue());
    assertEquals(32, photo.getPixelColorAt("grid-sharp", 1, 4).getGreenValue());
    assertEquals(21, photo.getPixelColorAt("grid-sharp", 1, 4).getBlueValue());
    assertEquals(3, photo.getPixelColorAt("grid-sharp", 2, 0).getRedValue());
    assertEquals(42, photo.getPixelColorAt("grid-sharp", 2, 0).getGreenValue());
    assertEquals(32, photo.getPixelColorAt("grid-sharp", 2, 0).getBlueValue());
    assertEquals(70, photo.getPixelColorAt("grid-sharp", 2, 1).getRedValue());
    assertEquals(100, photo.getPixelColorAt("grid-sharp", 2, 1).getGreenValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 2, 1).getBlueValue());
    assertEquals(125, photo.getPixelColorAt("grid-sharp", 2, 2).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 2, 2).getGreenValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 2, 2).getBlueValue());
    assertEquals(236, photo.getPixelColorAt("grid-sharp", 2, 3).getRedValue());
    assertEquals(158, photo.getPixelColorAt("grid-sharp", 2, 3).getGreenValue());
    assertEquals(89, photo.getPixelColorAt("grid-sharp", 2, 3).getBlueValue());
    assertEquals(199, photo.getPixelColorAt("grid-sharp", 2, 4).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 2, 4).getGreenValue());
    assertEquals(4, photo.getPixelColorAt("grid-sharp", 2, 4).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 3, 0).getRedValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 3, 0).getGreenValue());
    assertEquals(36, photo.getPixelColorAt("grid-sharp", 3, 0).getBlueValue());
    assertEquals(46, photo.getPixelColorAt("grid-sharp", 3, 1).getRedValue());
    assertEquals(113, photo.getPixelColorAt("grid-sharp", 3, 1).getGreenValue());
    assertEquals(189, photo.getPixelColorAt("grid-sharp", 3, 1).getBlueValue());
    assertEquals(190, photo.getPixelColorAt("grid-sharp", 3, 2).getRedValue());
    assertEquals(82, photo.getPixelColorAt("grid-sharp", 3, 2).getGreenValue());
    assertEquals(48, photo.getPixelColorAt("grid-sharp", 3, 2).getBlueValue());
    assertEquals(230, photo.getPixelColorAt("grid-sharp", 3, 3).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 3, 3).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 3, 3).getBlueValue());
    assertEquals(205, photo.getPixelColorAt("grid-sharp", 3, 4).getRedValue());
    assertEquals(237, photo.getPixelColorAt("grid-sharp", 3, 4).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 3, 4).getBlueValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 4, 0).getRedValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 4, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 4, 0).getBlueValue());
    assertEquals(167, photo.getPixelColorAt("grid-sharp", 4, 1).getRedValue());
    assertEquals(73, photo.getPixelColorAt("grid-sharp", 4, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 4, 1).getBlueValue());
    assertEquals(228, photo.getPixelColorAt("grid-sharp", 4, 2).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 4, 2).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 4, 2).getBlueValue());
    assertEquals(239, photo.getPixelColorAt("grid-sharp", 4, 3).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 4, 3).getGreenValue());
    assertEquals(26, photo.getPixelColorAt("grid-sharp", 4, 3).getBlueValue());
    assertEquals(71, photo.getPixelColorAt("grid-sharp", 4, 4).getRedValue());
    assertEquals(128, photo.getPixelColorAt("grid-sharp", 4, 4).getGreenValue());
    assertEquals(179, photo.getPixelColorAt("grid-sharp", 4, 4).getBlueValue());
    assertEquals(38, photo.getPixelColorAt("grid-sharp", 5, 0).getRedValue());
    assertEquals(26, photo.getPixelColorAt("grid-sharp", 5, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 5, 0).getBlueValue());
    assertEquals(210, photo.getPixelColorAt("grid-sharp", 5, 1).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 5, 1).getGreenValue());
    assertEquals(5, photo.getPixelColorAt("grid-sharp", 5, 1).getBlueValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 5, 2).getRedValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 5, 2).getGreenValue());
    assertEquals(71, photo.getPixelColorAt("grid-sharp", 5, 2).getBlueValue());
    assertEquals(140, photo.getPixelColorAt("grid-sharp", 5, 3).getRedValue());
    assertEquals(194, photo.getPixelColorAt("grid-sharp", 5, 3).getGreenValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 5, 3).getBlueValue());
    assertEquals(72, photo.getPixelColorAt("grid-sharp", 5, 4).getRedValue());
    assertEquals(179, photo.getPixelColorAt("grid-sharp", 5, 4).getGreenValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 5, 4).getBlueValue());
    assertEquals(14, photo.getPixelColorAt("grid-sharp", 6, 0).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-sharp", 6, 0).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 6, 0).getBlueValue());
    assertEquals(179, photo.getPixelColorAt("grid-sharp", 6, 1).getRedValue());
    assertEquals(233, photo.getPixelColorAt("grid-sharp", 6, 1).getGreenValue());
    assertEquals(0, photo.getPixelColorAt("grid-sharp", 6, 1).getBlueValue());
    assertEquals(110, photo.getPixelColorAt("grid-sharp", 6, 2).getRedValue());
    assertEquals(178, photo.getPixelColorAt("grid-sharp", 6, 2).getGreenValue());
    assertEquals(204, photo.getPixelColorAt("grid-sharp", 6, 2).getBlueValue());
    assertEquals(73, photo.getPixelColorAt("grid-sharp", 6, 3).getRedValue());
    assertEquals(179, photo.getPixelColorAt("grid-sharp", 6, 3).getGreenValue());
    assertEquals(255, photo.getPixelColorAt("grid-sharp", 6, 3).getBlueValue());
    assertEquals(100, photo.getPixelColorAt("grid-sharp", 6, 4).getRedValue());
    assertEquals(28, photo.getPixelColorAt("grid-sharp", 6, 4).getGreenValue());
    assertEquals(99, photo.getPixelColorAt("grid-sharp", 6, 4).getBlueValue());
  }

  @Test
  public void testSepia() {
    PhotoshopAdditionalOperationsInterface photo = new PhotoshopAdditionalOperationsImpl();
    photo.load("res/grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.sepia("Grid", "grid-sepia");
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 0, 0).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 0, 0).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 0, 0).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 0, 1).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 0, 1).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 0, 1).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 0, 2).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 0, 2).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 0, 2).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 0, 3).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 0, 3).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 0, 3).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 0, 4).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 0, 4).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 0, 4).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 1, 0).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 1, 0).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 1, 0).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 1, 1).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 1, 1).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 1, 1).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 1, 2).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 1, 2).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 1, 2).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 1, 3).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 1, 3).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 1, 3).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 1, 4).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 1, 4).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 1, 4).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 2, 0).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 2, 0).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 2, 0).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 2, 1).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 2, 1).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 2, 1).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 2, 2).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 2, 2).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 2, 2).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 2, 3).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 2, 3).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 2, 3).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 2, 4).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 2, 4).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 2, 4).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 3, 0).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 3, 0).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 3, 0).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 3, 1).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 3, 1).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 3, 1).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 3, 2).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 3, 2).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 3, 2).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 3, 3).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 3, 3).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 3, 3).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 3, 4).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 3, 4).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 3, 4).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 4, 0).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 4, 0).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 4, 0).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 4, 1).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 4, 1).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 4, 1).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 4, 2).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 4, 2).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 4, 2).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 4, 3).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 4, 3).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 4, 3).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 4, 4).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 4, 4).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 4, 4).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 5, 0).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 5, 0).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 5, 0).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 5, 1).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 5, 1).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 5, 1).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 5, 2).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 5, 2).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 5, 2).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 5, 3).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 5, 3).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 5, 3).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 5, 4).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 5, 4).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 5, 4).getBlueValue());
    assertEquals(209, photo.getPixelColorAt("grid-sepia", 6, 0).getRedValue());
    assertEquals(187, photo.getPixelColorAt("grid-sepia", 6, 0).getGreenValue());
    assertEquals(145, photo.getPixelColorAt("grid-sepia", 6, 0).getBlueValue());
    assertEquals(215, photo.getPixelColorAt("grid-sepia", 6, 1).getRedValue());
    assertEquals(191, photo.getPixelColorAt("grid-sepia", 6, 1).getGreenValue());
    assertEquals(149, photo.getPixelColorAt("grid-sepia", 6, 1).getBlueValue());
    assertEquals(95, photo.getPixelColorAt("grid-sepia", 6, 2).getRedValue());
    assertEquals(84, photo.getPixelColorAt("grid-sepia", 6, 2).getGreenValue());
    assertEquals(66, photo.getPixelColorAt("grid-sepia", 6, 2).getBlueValue());
    assertEquals(176, photo.getPixelColorAt("grid-sepia", 6, 3).getRedValue());
    assertEquals(157, photo.getPixelColorAt("grid-sepia", 6, 3).getGreenValue());
    assertEquals(122, photo.getPixelColorAt("grid-sepia", 6, 3).getBlueValue());
    assertEquals(67, photo.getPixelColorAt("grid-sepia", 6, 4).getRedValue());
    assertEquals(60, photo.getPixelColorAt("grid-sepia", 6, 4).getGreenValue());
    assertEquals(46, photo.getPixelColorAt("grid-sepia", 6, 4).getBlueValue());
  }

  @Test
  public void testGreyscale() {
    PhotoshopAdditionalOperationsInterface photo = new PhotoshopAdditionalOperationsImpl();
    photo.load("res/grid.ppm", "Grid");
    assertEquals(35, photo.getPictureSize("Grid"));
    photo.greyscale("Grid", "grid-greyscale");
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 0, 0).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 0, 0).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 0, 0).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 0, 1).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 0, 1).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 0, 1).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 0, 2).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 0, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 0, 2).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 0, 3).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 0, 3).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 0, 3).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 0, 4).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 0, 4).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 0, 4).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 1, 0).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 1, 0).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 1, 0).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 1, 1).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 1, 1).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 1, 1).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 1, 2).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 1, 2).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 1, 2).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 1, 3).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 1, 3).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 1, 3).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 1, 4).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 1, 4).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 1, 4).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 2, 0).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 2, 0).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 2, 0).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 2, 1).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 2, 1).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 2, 1).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 2, 2).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 2, 2).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 2, 2).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 2, 3).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 2, 3).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 2, 3).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 2, 4).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 2, 4).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 2, 4).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 3, 0).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 3, 0).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 3, 0).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 3, 1).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 3, 1).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 3, 1).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 3, 2).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 3, 2).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 3, 2).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 3, 3).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 3, 3).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 3, 3).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 3, 4).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 3, 4).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 3, 4).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 4, 0).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 4, 0).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 4, 0).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 4, 1).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 4, 1).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 4, 1).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 4, 2).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 4, 2).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 4, 2).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 4, 3).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 4, 3).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 4, 3).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 4, 4).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 4, 4).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 4, 4).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 5, 0).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 5, 0).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 5, 0).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 5, 1).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 5, 1).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 5, 1).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 5, 2).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 5, 2).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 5, 2).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 5, 3).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 5, 3).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 5, 3).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 5, 4).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 5, 4).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 5, 4).getBlueValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 6, 0).getRedValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 6, 0).getGreenValue());
    assertEquals(174, photo.getPixelColorAt("grid-greyscale", 6, 0).getBlueValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 6, 1).getRedValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 6, 1).getGreenValue());
    assertEquals(175, photo.getPixelColorAt("grid-greyscale", 6, 1).getBlueValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 6, 2).getRedValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 6, 2).getGreenValue());
    assertEquals(63, photo.getPixelColorAt("grid-greyscale", 6, 2).getBlueValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 6, 3).getRedValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 6, 3).getGreenValue());
    assertEquals(139, photo.getPixelColorAt("grid-greyscale", 6, 3).getBlueValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 6, 4).getRedValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 6, 4).getGreenValue());
    assertEquals(41, photo.getPixelColorAt("grid-greyscale", 6, 4).getBlueValue());
  }
}
